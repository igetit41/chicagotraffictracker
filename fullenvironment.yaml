#Internal Rabbit serviceaccount
apiVersion: v1
kind: ServiceAccount
metadata:
  name: rabbitmq
  namespace: default
---
#Role for reading endpoints
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: endpoint-reader
rules:
- apiGroups: [""]
  resources: ["endpoints"]
  verbs: ["get"]
---
#Binding serviceaccount and role together
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1beta1
metadata:
  name: endpoint-reader
subjects:
- kind: ServiceAccount
  name: rabbitmq
  namespace: default
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: endpoint-reader
---
#Internal Rabbit service
kind: Service
apiVersion: v1
metadata:
  namespace: default
  name: rabbitmq
  labels:
    app: rabbitmq
    type: LoadBalancer  
spec:
  type: NodePort
  ports:
   - name: amqp
     protocol: TCP
     port: 5672
     targetPort: 5672
     nodePort: 30672
  selector:
    app: rabbitmq
#External management service
---
apiVersion: v1
kind: Service
metadata:
  name: svc-rabbitmqex
  labels:
    app: rabbitmq
spec:
  type: LoadBalancer
  ports:
  - port: 15672
    targetPort: 15672
    protocol: TCP
    name: http
  selector:
    app: rabbitmq
---
#Configmap for configuration of auto-clustering
apiVersion: v1
kind: ConfigMap
metadata:
  name: rabbitmq-config
  namespace: default
data:
  enabled_plugins: |
      [rabbitmq_management,rabbitmq_peer_discovery_k8s].
  rabbitmq.conf: |
      cluster_formation.peer_discovery_backend  = rabbit_peer_discovery_k8s
      cluster_formation.k8s.host = kubernetes.default.svc.cluster.local
      cluster_formation.k8s.address_type = ip
      cluster_formation.node_cleanup.interval = 30
      cluster_formation.node_cleanup.only_log_warning = true
      cluster_partition_handling = autoheal
      queue_master_locator=min-masters
      loopback_users.guest = false
      auth_mechanisms.1 = PLAIN
      auth_mechanisms.2 = AMQPLAIN
---
#Rabbit cluster statefulset
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: rabbitmq
  namespace: default
spec:
  serviceName: rabbitmq
  replicas: 2
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      serviceAccountName: rabbitmq
      terminationGracePeriodSeconds: 10
      containers:        
      - name: rabbitmq-k8s
        image: $rabbitmqImage
        volumeMounts:
          - name: config-volume
            mountPath: /etc/rabbitmq
        ports:
          - name: http
            protocol: TCP
            containerPort: 15672
          - name: amqp
            protocol: TCP
            containerPort: 5672
        livenessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 60
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          exec:
            command: ["rabbitmqctl", "status"]
          initialDelaySeconds: 20
          periodSeconds: 60
          timeoutSeconds: 10
        imagePullPolicy: Always
        env:
          - name: MY_POD_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: RABBITMQ_USE_LONGNAME
            value: "true"
          - name: RABBITMQ_NODENAME
            value: "rabbit@$(MY_POD_IP)"
          - name: K8S_SERVICE_NAME
            value: "rabbitmq"
          - name: RABBITMQ_ERLANG_COOKIE
            value: "mycookie" 
          - name: rabbitServer_mqadmin
            value: $rabbitServer_mqadmin
          - name: rabbitServer_mqadminpassword
            value: $rabbitServer_mqadminpassword
      volumes:
        - name: config-volume
          configMap:
            name: rabbitmq-config
            items:
            - key: rabbitmq.conf
              path: rabbitmq.conf
            - key: enabled_plugins
              path: enabled_plugins
---
#Data distribution horisontal pod autoscaler
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-datadist
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dep-datadist
  minReplicas: 1
  maxReplicas: 5
  #Scaling metrics
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
    resource:
      name: memory
      targetAverageUtilization: 50
---
#Data distribution deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-datadist
  labels:
    app: datadist
spec:
  selector:
    matchLabels:
      run: datadist
  replicas: 1
  template:
    metadata:
      labels:
        run: datadist
    spec:
      containers:
      - name: datadist
        image: $datadistImage
        env:
          #Rabbit server credentials
        - name: rabbitServer
          value: $rabbitServer
        - name: rabbitServer_mqadmin
          value: $rabbitServer_mqadmin
        - name: rabbitServer_mqadminpassword
          value: $rabbitServer_mqadminpassword
          #PostgreSQL credentials
        - name: postgreSQL_host
          value: $postgreSQL_host
        - name: postgreSQL_user
          value: $postgreSQL_user
        - name: postgreSQL_password
          value: $postgreSQL_password
        - name: postgreSQL_database
          value: $postgreSQL_database
          #PostgreSQL SSL credentials
        - name: postgreSQL_sslrootcert
          value: "/gcppostgresslserver-ca.pem"
        - name: postgreSQL_sslcert
          value: "/gcppostgresslclient-cert.pem"
        - name: postgreSQL_sslkey
          value: "/gcppostgresslclient-key.pem"
---
#PostgreSQL population horisontal pod autoscaler
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-dbppgsql
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dep-dbppgsql
  minReplicas: 1
  maxReplicas: 5
  #Scaling metrics
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
    resource:
      name: memory
      targetAverageUtilization: 50
---
#PostgreSQL population deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-dbppgsql
  labels:
    app: dbppgsql
spec:
  selector:
    matchLabels:
      run: dbppgsql
  replicas: 1
  template:
    metadata:
      labels:
        run: dbppgsql
    spec:
      containers:
      - name: dbppgsql
        image: $dbppgsqlImage
        env:
          #Rabbit server credentials
        - name: rabbitServer
          value: $rabbitServer
        - name: rabbitServer_mqadmin
          value: $rabbitServer_mqadmin
        - name: rabbitServer_mqadminpassword
          value: $rabbitServer_mqadminpassword
          #PostgreSQL credentials
        - name: postgreSQL_host
          value: $postgreSQL_host
        - name: postgreSQL_user
          value: $postgreSQL_user
        - name: postgreSQL_password
          value: $postgreSQL_password
        - name: postgreSQL_database
          value: $postgreSQL_database
          #PostgreSQL SSL credentials
        - name: postgreSQL_sslrootcert
          value: "/gcppostgresslserver-ca.pem"
        - name: postgreSQL_sslcert
          value: "/gcppostgresslclient-cert.pem"
        - name: postgreSQL_sslkey
          value: "/gcppostgresslclient-key.pem"
---
#BigQuery population horisontal pod autoscaler
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: hpa-dbpbigq
  namespace: default
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dep-dbpbigq
  minReplicas: 1
  maxReplicas: 5
  #Scaling metrics
  metrics:
  - type: Resource
    resource:
      name: cpu
      targetAverageUtilization: 50
    resource:
      name: memory
      targetAverageUtilization: 50
---
#BigQuery population deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-dbpbigq
  labels:
    app: dbpbigq
spec:
  selector:
    matchLabels:
      run: dbpbigq
  replicas: 1
  template:
    metadata:
      labels:
        run: dbpbigq
    spec:
      containers:
      - name: dbpbigq
        image: $bigqueryImage
        env:
          #Rabbit server credentials
        - name: rabbitServer
          value: $rabbitServer
        - name: rabbitServer_mqadmin
          value: $rabbitServer_mqadmin
        - name: rabbitServer_mqadminpassword
          value: $rabbitServer_mqadminpassword
          #BigQuery credentials
        - name: bigquery_creds
          value: "/bigquerycreds.json"
---
#Stream consume deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dep-strcons
  labels:
    app: strcons
spec:
  selector:
    matchLabels:
      run: strcons
  replicas: 1
  template:
    metadata:
      labels:
        run: strcons
    spec:
      containers:
      - name: strcons
        image: $strconsImage
        env:
          #Rabbit server credentials
        - name: rabbitServer
          value: $rabbitServer
        - name: rabbitServer_mqadmin
          value: $rabbitServer_mqadmin
        - name: rabbitServer_mqadminpassword
          value: $rabbitServer_mqadminpassword
          #Traffic Data Stream credentials
        - name: stream_url
          value: $stream_url
        - name: stream_account
          value: $stream_account
        - name: stream_password
          value: $stream_password
        - name: stream_token
          value: $stream_token